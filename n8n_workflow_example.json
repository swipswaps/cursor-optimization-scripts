{
  "name": "Comprehensive n8n Workflow Example",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "url": "https://jsonplaceholder.typicode.com/posts/1",
        "options": {}
      },
      "id": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6",
      "name": "Fetch Sample Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [240, 300],
      "webhookId": ""
    },
    {
      "parameters": {
        "jsCode": "// Process the fetched data\nconst data = $input.first().json;\n\n// Add timestamp and processing info\nconst processedData = {\n  originalData: data,\n  processedAt: new Date().toISOString(),\n  workflowInfo: {\n    name: 'Comprehensive n8n Workflow Example',\n    description: 'Demonstrates HTTP requests, data processing, and MCP integration',\n    features: [\n      'HTTP API calls',\n      'Data transformation',\n      'Conditional logic',\n      'Error handling',\n      'MCP integration'\n    ]\n  },\n  statistics: {\n    titleLength: data.title ? data.title.length : 0,\n    bodyLength: data.body ? data.body.length : 0,\n    userId: data.userId || 'unknown'\n  }\n};\n\nreturn [{ json: processedData }];"
      },
      "id": "2b3c4d5e-6f7g-8h9i-0j1k-l2m3n4o5p6q7",
      "name": "Process Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.statistics.titleLength }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c4d5e6f-7g8h-9i0j-1k2l-m3n4o5p6q7r8",
      "name": "Check Title Length",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Handle long title case\nconst data = $input.first().json;\n\nconst result = {\n  ...data,\n  analysis: {\n    status: 'LONG_TITLE',\n    message: 'Title is longer than 20 characters',\n    recommendation: 'Consider shortening the title for better UX',\n    titlePreview: data.originalData.title.substring(0, 50) + '...'\n  }\n};\n\nreturn [{ json: result }];"
      },
      "id": "4d5e6f7g-8h9i-0j1k-2l3m-n4o5p6q7r8s9",
      "name": "Handle Long Title",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Handle short title case\nconst data = $input.first().json;\n\nconst result = {\n  ...data,\n  analysis: {\n    status: 'SHORT_TITLE',\n    message: 'Title is 20 characters or less',\n    recommendation: 'Title length is optimal',\n    titlePreview: data.originalData.title\n  }\n};\n\nreturn [{ json: result }];"
      },
      "id": "5e6f7g8h-9i0j-1k2l-3m4n-o5p6q7r8s9t0",
      "name": "Handle Short Title",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "jsCode": "// Combine and finalize results\nconst data = $input.first().json;\n\n// Add MCP integration information\nconst finalResult = {\n  ...data,\n  mcpIntegration: {\n    available: true,\n    tools: [\n      'n8n.workflow.list',\n      'n8n.workflow.create',\n      'n8n.workflow.execute',\n      'n8n.node.list',\n      'n8n.execution.list',\n      'n8n.credential.list',\n      'n8n.webhook.list',\n      'n8n.user.list',\n      'n8n.tag.list',\n      'n8n.variable.list',\n      'n8n.workflow.activate',\n      'n8n.workflow.deactivate',\n      'n8n.workflow.delete',\n      'n8n.workflow.duplicate',\n      'n8n.workflow.export',\n      'n8n.workflow.import',\n      'n8n.workflow.update',\n      'n8n.execution.get',\n      'n8n.execution.delete',\n      'n8n.credential.create',\n      'n8n.credential.update',\n      'n8n.credential.delete'\n    ],\n    description: 'This workflow demonstrates integration with n8n MCP tools for programmatic workflow management'\n  },\n  summary: {\n    totalSteps: 6,\n    features: [\n      'HTTP API integration',\n      'Data processing and transformation',\n      'Conditional logic and branching',\n      'Error handling and validation',\n      'MCP tool integration',\n      'Comprehensive logging'\n    ],\n    executionTime: new Date().toISOString()\n  }\n};\n\nreturn [{ json: finalResult }];"
      },
      "id": "6f7g8h9i-0j1k-2l3m-4n5o-p6q7r8s9t0u1",
      "name": "Finalize Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "https://httpbin.org/post",
        "sendBody": true,
        "bodyParameters": [
          {
            "name": "workflow_result",
            "value": "={{ $json }}"
          }
        ],
        "options": {}
      },
      "id": "7g8h9i0j-1k2l-3m4n-5o6p-q7r8s9t0u1v2",
      "name": "Send Results",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300],
      "webhookId": ""
    }
  ],
  "connections": {
    "Fetch Sample Data": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Data": {
      "main": [
        [
          {
            "node": "Check Title Length",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Title Length": {
      "main": [
        [
          {
            "node": "Handle Long Title",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Short Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Long Title": {
      "main": [
        [
          {
            "node": "Finalize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Short Title": {
      "main": [
        [
          {
            "node": "Finalize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Finalize Results": {
      "main": [
        [
          {
            "node": "Send Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "example-tag",
      "name": "example"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
} 